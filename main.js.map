{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/mi-componente/mi-componente.component.html","./src/app/mi-componente/mi-componente.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IAEvB;QADA,UAAK,GAAU,QAAQ,CAAC;QAEtB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC;;wEAJU,YAAY;4FAAZ,YAAY;QCPzB,+EACoB;QACpB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;ICE3B,uEAA6E;IAAA,2SAAgP;IAAA,4DAAI;;;IAA/Q,wJAA0B;;;IAGxE,uEAAqB;IAAA,2QAAgN;IAAA,4DAAI;;;ACA1O,MAAM,qBAAqB;IAIhC;QAHA,UAAK,GAAW,KAAK,CAAC;QACtB,UAAK,GAAU,EAAE,CAAC;QAClB,WAAM,GAAQ,EAAE,CAAC;IACD,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FAPU,qBAAqB;qGAArB,qBAAqB;QDPlC,wEAA+D;QAAA,uDAAgC;QAAA,4DAAK;QAEpG,yEAEI;QAAA,6GAAiU;QAEjU,6MAEc;QAEd,4EAA8F;QAA1C,iLAA+B,SAAS,IAAC;QAAC,gEAAK;QAAA,4DAAS;QAChH,4DAAM;QAEN,wEAA+D;QAAA,oEAAS;QAAA,4DAAK;QAE7E,0EAEI;QAAA,wEAA2E;QAAA,4SAAgP;QAAA,4DAAI;QAG/T,wEAAwE;QAAA,4QAAgN;QAAA,4DAAI;QAG5R,6EAAiF;QAA7B,2JAAkB,SAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC/F,6EAAiF;QAA7B,2JAAkB,SAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QACnG,4DAAM;;;QAzByD,0DAAgC;QAAhC,gHAAgC;QAIlE,0DAAY;QAAZ,2EAAY;QAaN,0DAA2C;QAA3C,mKAA2C;QAG9C,0DAA2C;QAA3C,mKAA2C;;;;;;;;;;;;;;AEnB3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACiC;;AAczE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBAVlB,2DAAY;QACZ,4FAAqB,aAGrB,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACbpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title:string = 'mi-app';\n  constructor(){\n    console.log('hola mundo!!!' + this.title);\n  }\n}\n","<app-mi-componente>\n</app-mi-componente>\n<router-outlet></router-outlet>","<h1 class=\"container text-center bg-dark text-white my-4 py-4\">NgIf miVar = {{miVar}}-{{fondo}}</h1>\n\n<div class=\"container\">\n\n    <p class=\"text-warning\" *ngIf=\"miVar;else miVar2\" [ngClass]=\"[fondo, 'p-5']\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, laboriosam incidunt voluptas officiis numquam assumenda consequuntur aspernatur autem nisi nulla, eligendi deserunt tempore. Sequi, animi. Quidem rerum a perspiciatis iste.</p>\n\n    <ng-template #miVar2>\n        <p class=\"text-info\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Harum numquam omnis expedita et corrupti molestiae natus quos id delectus asperiores? Laboriosam neque eum ut veniam soluta assumenda et dicta. Atque?</p>\n    </ng-template>\n\n    <button class=\"btn btn-success col-2\" type=\"button\" (click)=\"miVar = !miVar; fondo='bg-dark'\">Click</button>\n</div>\n\n<h1 class=\"container text-center bg-dark text-white my-4 py-4\">[ngClass]</h1>\n\n<div class=\"container\">\n\n    <p class=\"text-warning d-none\" [ngClass]=\"{'d-block':activo == 'primero'}\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, laboriosam incidunt voluptas officiis numquam assumenda consequuntur aspernatur autem nisi nulla, eligendi deserunt tempore. Sequi, animi. Quidem rerum a perspiciatis iste.</p>\n\n\n    <p class=\"text-info d-none\" [ngClass]=\"{'d-block':activo == 'segundo'}\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Harum numquam omnis expedita et corrupti molestiae natus quos id delectus asperiores? Laboriosam neque eum ut veniam soluta assumenda et dicta. Atque?</p>\n\n\n    <button class=\"btn btn-success col-2\" type=\"button\" (click)=\"activo = 'primero'\">Click</button>\n    <button class=\"btn btn-success col-2\" type=\"button\" (click)=\"activo = 'segundo'\">Click</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mi-componente',\n  templateUrl: './mi-componente.component.html',\n  styleUrls: ['./mi-componente.component.sass']\n})\nexport class MiComponenteComponent implements OnInit {\n  miVar:boolean = false;\n  fondo:string = '';\n  activo:string='';\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MiComponenteComponent } from './mi-componente/mi-componente.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MiComponenteComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}